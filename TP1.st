Object subclass: #AlgoTek	instanceVariableNames: 'eventos artista'	classVariableNames: ''	package: 'TP1'!!AlgoTek methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:49'!costoEntradaPara:unEvento enUbicacion:ubicacionElegida pagandoCon:unMetodoDePago	|evento|.	evento:= eventos detect: [ :e| (e ubicacion nombre) = ubicacionElegida  ].		^(evento pagarCon:unMetodoDePago )! !!AlgoTek methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:49'!entradaMasBarataPara:unEvento pagandoCon:unMetodoDePago	|evento|	evento   := eventos  detectMin: [ :e| (e ubicacion  calcularTarifa)] .	^(evento pagarCon:unMetodoDePago ).	! !!AlgoTek methodsFor: 'initialization' stamp: 'FRANCISCOLOPEZ 9/28/2023 10:26'!initialize 	eventos := OrderedCollection new.! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'FRANCISCOLOPEZ 9/28/2023 11:28'!registrarEvento:unEvento deArtistaNacional:unArtista conTarifaArtista:unaTarifaArtistica	artista:= ArtistaNacional nombre:unArtista conTarifa:unaTarifaArtistica.	 ! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:20'!paraEvento:unEvento registrarUbicacionPlateaPreferencial:unaUbicacion tarifa:unaTarifa	eventos add:		(Evento registarUnEvento:unEvento conArtista:artista enUnaUbicacion:(Platea nombre:unaUbicacion  conUnaTarifa:unaTarifa ) )	! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:20'!paraEvento:unEvento registrarUbicacionCampo:unaUbicacion tarifa:unaTarifa	eventos add:		(Evento registarUnEvento:unEvento conArtista:artista enUnaUbicacion:(Campo nombre:unaUbicacion  conUnaTarifa:unaTarifa ) )	! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'FRANCISCOLOPEZ 9/28/2023 11:28'!registrarEvento:unEvento deArtistaInternacional:unArtista conTarifaArtista:unaTarifaArtistica	artista  := ArtistaInternacional  nombre:unArtista conTarifa:unaTarifaArtistica.! !!AlgoTek methodsFor: 'as yet unclassified' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:20'!paraEvento:unEvento registrarUbicacionViP:unaUbicacion tarifa:unaTarifa lugaresDisponibles:unosLugares		eventos add:		(Evento registarUnEvento:unEvento conArtista:artista enUnaUbicacion:(Vip nombre:unaUbicacion  conUnaTarifa:unaTarifa   conUnosLugares:unosLugares ) )	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoTek class	instanceVariableNames: ''!!AlgoTek class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:53'!registrarEvento:unEvento deArtistaNacional:unArtista conTarifaArtista:unaTarifaArtistica|algotek  |.algotek := AlgoTek new.algotek registrarEvento:unEvento deArtistaNacional:unArtista conTarifaArtista:unaTarifaArtistica .^ (algotek) .! !!AlgoTek class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:53'!registrarEvento:unEvento deArtistaInternacional:unArtista conTarifaArtista: unaTarifa|algotek|.algotek := AlgoTek new.algotek registrarEvento:unEvento deArtistaInternacional:unArtista conTarifaArtista: unaTarifa.^ (algotek ) .! !Object subclass: #Artista	instanceVariableNames: 'tarifaArtistica nombre'	classVariableNames: ''	package: 'TP1'!!Artista methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/25/2023 22:10'!nombre:unNombre conTarifa:unaTarifa	nombre := unNombre .	(unaTarifa <0 ) ifTrue: [ TarifaInvalidaError signal ].	tarifaArtistica := unaTarifa .! !!Artista methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/23/2023 11:03'!nombre	^ nombre ! !!Artista methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/27/2023 18:46'!tarifa	^ tarifaArtistica ! !!Artista methodsFor: 'as yet unclassified' stamp: 'FRANCISCOLOPEZ 9/23/2023 10:58'!calcularTarifaArtistica	self subclassResponsibility .! !Artista subclass: #ArtistaInternacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ArtistaInternacional methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/23/2023 11:01'!calcularTarifaArtistica 	^((tarifaArtistica*2)/5 + 1000 )! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ArtistaInternacional class	instanceVariableNames: ''!!ArtistaInternacional class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/23/2023 19:58'!nombre:unNombre conTarifa:unaTarifa	|artista|.	artista := ArtistaInternacional  new.	artista nombre:unNombre conTarifa:unaTarifa.	^ artista .! !Artista subclass: #ArtistaNacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ArtistaNacional methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/23/2023 11:00'!calcularTarifaArtistica  ^ (tarifaArtistica log) .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ArtistaNacional class	instanceVariableNames: ''!!ArtistaNacional class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/23/2023 19:58'!nombre:unNombre conTarifa:unaTarifa	|artista|.	artista := ArtistaNacional  new.	artista nombre:unNombre conTarifa:unaTarifa.	^ artista .! !Object subclass: #Efectivo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Efectivo methodsFor: 'not defined category' stamp: 'franciscoLopez 1/5/2024 16:20'!costoDeEntrada:unCosto"Cuando se paga en efectivo no dice que se aplique un descuento"	^unCosto .! !Object subclass: #Evento	instanceVariableNames: 'nombreDelEvento ubicacion artista'	classVariableNames: ''	package: 'TP1'!!Evento methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:11'!ubicacion	^ ubicacion .! !!Evento methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:33'!artista	^artista! !!Evento methodsFor: 'as yet unclassified' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:34'!registarUnEvento:unEvento conArtista:unArtista enUnaUbicacion:unaUbicacion 	ubicacion := unaUbicacion .	artista 	:= unArtista .	nombreDelEvento := unEvento .		! !!Evento methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:48'!costoDeEntrada	|costo|.	"Calculamos el costo y lo devolvemos"		costo := (ubicacion calcularTarifa ) + (artista calcularTarifaArtistica  ).     	^(costo). ! !!Evento methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:34'!nombreEvento	^ nombreDelEvento ! !!Evento methodsFor: 'not defined category' stamp: 'franciscoLopez 1/5/2024 16:20'!pagarCon:unMetodoDePago	|precio |.	"Siempre tenemos que tener que saber el metodo de pago, el descuento lo realiza el metodo."	precio :=  self costoDeEntrada.	^(unMetodoDePago costoDeEntrada:precio)	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Evento class	instanceVariableNames: ''!!Evento class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/28/2023 13:18'!registarUnEvento:unEvento conArtista:unArtista enUnaUbicacion:unaUbicacion 	|evento|.	evento := Evento new.		evento registarUnEvento:unEvento conArtista:unArtista enUnaUbicacion:unaUbicacion .	^evento .! !Error subclass: #NohayLugaresDisponiblesError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #NombreDeTarjetaInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #TarifaInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Tarjeta	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'TP1'!!Tarjeta methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/26/2023 18:05'!conNombre:unNombre	(unNombre = '') ifTrue: [ NombreDeTarjetaInvalidoError  signal ].	nombre := unNombre .! !!Tarjeta methodsFor: 'not defined category' stamp: 'franciscoLopez 1/5/2024 16:18'!costoDeEntrada:unCosto	^(unCosto  * 0.8)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tarjeta class	instanceVariableNames: 'nombre'!!Tarjeta class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/20/2023 18:26'!conNombre:unNombre	|tarjeta|.	tarjeta := Tarjeta  new.	tarjeta conNombre:unNombre.	^ tarjeta.! !Object subclass: #Ubicacion	instanceVariableNames: 'tarifa nombre'	classVariableNames: ''	package: 'TP1'!!Ubicacion methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/23/2023 10:35'!calcularTarifa	self subclassResponsibility.! !!Ubicacion methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/23/2023 10:50'!nombre	^ nombre ! !!Ubicacion methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/27/2023 20:07'!tarifa 		^tarifa ! !Ubicacion subclass: #Campo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Campo methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/27/2023 22:13'!nombre:unNombre conUnaTarifa:unaTarifa	nombre:= unNombre .	(unaTarifa <0 ) ifTrue: [ TarifaInvalidaError signal ].	tarifa := unaTarifa . ! !!Campo methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/23/2023 10:28'!calcularTarifa	"Si la ubicacion es en el campo el precio se mantiene"	^(tarifa )! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Campo class	instanceVariableNames: ''!!Campo class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/22/2023 17:22'!nombre:unNombre conUnaTarifa:unaTarifa	|campo|.	campo := Campo new.	campo nombre:unNombre conUnaTarifa:unaTarifa.	^ campo.! !Ubicacion subclass: #Platea	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Platea methodsFor: 'accessing' stamp: 'FranciscoLopez 9/29/2023 16:16'!calcularTarifa	^(tarifa  * ((nombre last:2 )asInteger)).	! !!Platea methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/27/2023 22:13'!nombre:unNombre conUnaTarifa:unaTarifa	nombre:= unNombre .	(unaTarifa <0 ) ifTrue: [ TarifaInvalidaError signal ].	tarifa := unaTarifa . ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Platea class	instanceVariableNames: ''!!Platea class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/22/2023 17:35'!nombre:unNombre conUnaTarifa:unaTarifa	|platea |.	platea := Platea new.	platea nombre:unNombre conUnaTarifa:unaTarifa.	^ platea.! !Ubicacion subclass: #Vip	instanceVariableNames: 'lugaresDisponibles'	classVariableNames: ''	package: 'TP1'!!Vip methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/27/2023 22:13'!nombre:unNombre conUnaTarifa:unaTarifa conUnoslugares:unosLugares	nombre:= unNombre .	(unaTarifa <0 ) ifTrue: [ TarifaInvalidaError signal ].	tarifa := unaTarifa . 	lugaresDisponibles := unosLugares .! !!Vip methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/27/2023 21:21'!calcularTarifa	"Cuando se ocupa un lugar disponible, se debe restar para que aumente el precio"	|tarifaEsperada|.	self OcuparLugaresLibres .	tarifaEsperada := (tarifa / (lugaresDisponibles + 1) ).	^(tarifaEsperada).! !!Vip methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/27/2023 21:27'!OcuparLugaresLibres	lugaresDisponibles := lugaresDisponibles - 1.		(lugaresDisponibles < 0 ) ifTrue: [ NohayLugaresDisponiblesError  signal ].! !!Vip methodsFor: 'accessing' stamp: 'FRANCISCOLOPEZ 9/27/2023 21:22'!lugaresDisponibles	^(lugaresDisponibles)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Vip class	instanceVariableNames: ''!!Vip class methodsFor: 'not defined category' stamp: 'FRANCISCOLOPEZ 9/23/2023 19:39'!nombre:unNombre conUnaTarifa:unaTarifa conUnosLugares:unosLugares	|vip |.	vip := Vip new.	vip nombre:unNombre conUnaTarifa:unaTarifa conUnoslugares:unosLugares.	^ vip.! !