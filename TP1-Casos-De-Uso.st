TestCase subclass: #AlgoTekTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!AlgoTekTest methodsFor: 'tests' stamp: 'FranciscoLopez 9/28/2023 17:02'!test05LaEntradaMasBarataParaUnArtistaInternacionalPoseeElSiguienteCosto		| costoAPagar costoEsperado algoTek evento efectivo |		"Arrange"	evento := 'The Eras Tour, en River'.	efectivo := Efectivo new.	algoTek := AlgoTek registrarEvento: evento deArtistaInternacional: 'Taylor Swift' conTarifaArtista: 100000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'M912' tarifa: 25000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'D018' tarifa: 20000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Delantero' tarifa: 75000. "ay amiga, + sErVIcE CHanGe"	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Trasero' tarifa: 40000.	algoTek paraEvento: evento registrarUbicacionViP: 'Karma is my Boyfriend' tarifa: 155000 lugaresDisponibles: 2.	algoTek paraEvento: evento registrarUbicacionViP: 'Its a Love Story' tarifa: 85000 lugaresDisponibles: 2.	"Al ser un artista internacional, el impuesto 'al disfrute' te vacuna"	costoEsperado := (100000 * 2) / 5 + 1000.		"La entrada mas barata pertenece a la ubicacion de campo trasero en este caso"	costoEsperado := costoEsperado + 40000.	"Act"		costoAPagar := algoTek entradaMasBarataPara: evento pagandoCon: efectivo.		"Assert"	self assert: costoAPagar closeTo: costoEsperado precision: 0.0001! !!AlgoTekTest methodsFor: 'tests' stamp: 'FranciscoLopez 9/28/2023 17:03'!test07SacarUnaEntradaPagandoConTarjetaTieneUnDescuento		| costoAPagar costoEsperado ubicacionElegida algoTek evento tarjeta |		"Arrange"	evento := 'The Eras Tour, en River'.	algoTek := AlgoTek registrarEvento: evento deArtistaInternacional: 'Taylor Swift' conTarifaArtista: 100000.	ubicacionElegida := 'M912'.	tarjeta := Tarjeta conNombre: 'Patagonia'.		algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: ubicacionElegida tarifa: 25000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'D018' tarifa: 20000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Delantero' tarifa: 75000. "ay amiga, + sErVIcE CHanGe"	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Trasero' tarifa: 40000.	algoTek paraEvento: evento registrarUbicacionViP: 'Karma is my Boyfriend' tarifa: 155000 lugaresDisponibles: 2.	algoTek paraEvento: evento registrarUbicacionViP: 'Its a Love Story' tarifa: 85000 lugaresDisponibles: 2.	"Al ser un artista internacional, el impuesto 'al disfrute' te vacuna"	costoEsperado := (100000 * 2) / 5 + 1000.		"Al ser platea, se sacan los dos ultimos numeros de la ubicacion y se multiplica por la tarifa de platea"	costoEsperado := costoEsperado + (12 * 25000).	"Al pagar con tarjeta Patagonia, hay descuento del 20%"	costoEsperado := costoEsperado * 0.8.	"Act"		costoAPagar := algoTek costoEntradaPara: evento enUbicacion: ubicacionElegida pagandoCon: tarjeta.		"Assert"	self assert: costoAPagar closeTo: costoEsperado precision: 0.0001 .! !!AlgoTekTest methodsFor: 'tests' stamp: 'FranciscoLopez 9/28/2023 17:04'!test03SacarUnaEntradaParaUnArtistaNacionalEnViPPoseeElSiguienteCosto		| costoAPagar costoEsperado ubicacionElegida algoTek evento efectivo |		"Arrange"	evento := 'La Ultima Noche Magica En River'.	efectivo := Efectivo new.	algoTek := AlgoTek registrarEvento: evento deArtistaNacional: 'Tan Bionica' conTarifaArtista: 50000.	ubicacionElegida := 'Hospitality'.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'M912' tarifa: 2000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'D018' tarifa: 25000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo General' tarifa:  16000.	algoTek paraEvento: evento registrarUbicacionViP: 'Hospitality' tarifa:  40000 lugaresDisponibles: 10.		"Al ser un artista nacional, se subsidia su tarifa de artista"	costoEsperado := 50000 log.		"Al ser Hospitality, la tarifa se va encareciendo a medida que se van ocupando los lugares"	costoEsperado := costoEsperado + (40000 / 10).	"Act"		costoAPagar := algoTek costoEntradaPara: evento enUbicacion: ubicacionElegida pagandoCon: efectivo.		"Assert"	self assert: costoAPagar closeTo: costoEsperado precision: 0.0001.! !!AlgoTekTest methodsFor: 'tests' stamp: 'FranciscoLopez 9/28/2023 17:02'!test04SacarUnaEntradaParaUnArtistaInternacionalEnPlateaPoseeElSiguienteCosto	
		| costoAPagar costoEsperado ubicacionElegida algoTek evento efectivo |		"Arrange"	evento := 'The Eras Tour, en River'.	efectivo := Efectivo new.	algoTek := AlgoTek registrarEvento: evento deArtistaInternacional: 'Taylor Swift' conTarifaArtista: 100000.	ubicacionElegida := 'M912'.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: ubicacionElegida tarifa: 25000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'D018' tarifa: 20000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Delantero' tarifa: 75000. "ay amiga, + sErVIcE CHanGe"	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Trasero' tarifa: 40000.	algoTek paraEvento: evento registrarUbicacionViP: 'Karma is my Boyfriend' tarifa: 155000 lugaresDisponibles: 2.	algoTek paraEvento: evento registrarUbicacionViP: 'Its a Love Story' tarifa: 85000 lugaresDisponibles: 2.	"Al ser un artista internacional, el impuesto 'al disfrute' te vacuna"	costoEsperado := (100000 * 2) / 5 + 1000.		"Al ser platea, se sacan los dos ultimos numeros de la ubicacion y se multiplica por la tarifa de platea"	costoEsperado := costoEsperado + (12 * 25000).	"Act"		costoAPagar := algoTek costoEntradaPara: evento enUbicacion: ubicacionElegida pagandoCon: efectivo.		"Assert"	self assert: costoAPagar closeTo: costoEsperado precision: 0.0001! !!AlgoTekTest methodsFor: 'tests' stamp: 'FranciscoLopez 9/28/2023 17:01'!test02SacarUnaEntradaParaUnArtistaNacionalEnCampoPoseeElSiguienteCosto		| costoAPagar costoEsperado ubicacionElegida algoTek evento efectivo |		"Arrange"	evento := 'La Ultima Noche Magica En River'.	efectivo := Efectivo new.	algoTek := AlgoTek registrarEvento: evento deArtistaNacional: 'Tan Bionica' conTarifaArtista: 50000.	ubicacionElegida := 'Campo General'.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'M912' tarifa: 2000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'D018' tarifa: 25000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo General' tarifa: 16000.	algoTek paraEvento: evento registrarUbicacionViP: 'Hospitality' tarifa: 40000 lugaresDisponibles: 2.		"Al ser un artista nacional, se subsidia su tarifa de artista"	costoEsperado := 50000 log.		"Al ser campo, el costo es fijo"	costoEsperado := costoEsperado + 16000.	"Act"		costoAPagar := algoTek costoEntradaPara: evento enUbicacion: ubicacionElegida pagandoCon: efectivo.		"Assert"	self assert: costoAPagar closeTo: costoEsperado precision: 0.0001 .! !!AlgoTekTest methodsFor: 'tests' stamp: 'FranciscoLopez 9/28/2023 17:03'!test06SacarUnaEntradaParaUnArtistaInternacionalEnViPVaAumentandoSegunLocalidadesDisponibles		| costoAPagar costoEsperado ubicacionElegida algoTek evento efectivo |		"Arrange"	evento := 'The Eras Tour, en River'.	efectivo := Efectivo new.	algoTek := AlgoTek registrarEvento: evento deArtistaInternacional: 'Taylor Swift' conTarifaArtista: 100000.	ubicacionElegida := 'Its a Love Story'.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'A011' tarifa: 25000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'D018' tarifa: 20000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Delantero' tarifa: 75000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Trasero' tarifa: 40000.	algoTek paraEvento: evento registrarUbicacionViP: 'Karma is my Boyfriend' tarifa: 155000 lugaresDisponibles: 2.	algoTek paraEvento: evento registrarUbicacionViP: 'Its a Love Story' tarifa: 85000 lugaresDisponibles: 2.	"Ya se saco esta el 'Its a Love Story', por lo tanto se reduce el lugar disponible"	algoTek costoEntradaPara: evento enUbicacion: ubicacionElegida pagandoCon: efectivo.	"Al ser un artista internacional, el impuesto 'al disfrute'"	costoEsperado := (100000 * 2) / 5 + 1000.		"Al ser 'Its a Love Story', la tarifa se va encareciendo a medida que se van ocupando los lugares"	costoEsperado := costoEsperado + (85000 / 1).	"Act"		costoAPagar := algoTek costoEntradaPara: evento enUbicacion: ubicacionElegida pagandoCon: efectivo.		"Assert"	self assert: costoAPagar closeTo: costoEsperado precision: 0.0001 .! !!AlgoTekTest methodsFor: 'tests' stamp: 'Joaquin 9/13/2023 20:49'!test01SacarUnaEntradaParaUnArtistaEnUnaUbicacionEnParticularPoseeElSiguienteCosto	
	| costoAPagar costoEsperado ubicacionElegida algoTek evento efectivo |
	
	"Arrange"
	evento := 'La Ultima Noche Magica En River'.	efectivo := Efectivo new.
	algoTek := AlgoTek registrarEvento: evento deArtistaNacional: 'Tan Bionica' conTarifaArtista: 50000.

	ubicacionElegida := 'D018'.
	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'M912' tarifa: 25000.
	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: ubicacionElegida tarifa: 2000.
	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo General' tarifa: 16000.
	algoTek paraEvento: evento registrarUbicacionViP: 'Hospitality' tarifa: 40000 lugaresDisponibles: 2.
	
	"Al ser un artista nacional, se subsidia su tarifa de artista"
	costoEsperado := 50000 log.
	
	"Al ser platea, se sacan los dos ultimos numeros de la ubicacion y se multiplica por la tarifa de platea"
	costoEsperado := costoEsperado + (18 * 2000).

	"Act"	
	costoAPagar := algoTek costoEntradaPara: evento enUbicacion: ubicacionElegida pagandoCon: efectivo.
	
	"Assert"
	self assert: costoAPagar closeTo: costoEsperado precision: 0.0001 ! !TestCase subclass: #AlgoTekTestPropios	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!AlgoTekTestPropios methodsFor: 'tests' stamp: 'FranciscoLopez 9/28/2023 17:06'!test02SiSacoUnaEntradaVipParaUnArtistaNacionalYQuedaUnLugarSePuedeSacar	| costoAPagar costoEsperado ubicacionElegida algoTek evento efectivo |		"Caso borde donde solo queda un lugar en la ubicacion Vip"	"Arrange"	evento := 'La Ultima Noche Magica En River'.	efectivo := Efectivo new.	algoTek := AlgoTek registrarEvento: evento deArtistaNacional: 'Tan Bionica' conTarifaArtista: 50000.	ubicacionElegida := 'Hospitality'.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'M912' tarifa: 2000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'D018' tarifa: 25000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo General' tarifa:  16000.	algoTek paraEvento: evento registrarUbicacionViP: 'Hospitality' tarifa:  40000 lugaresDisponibles: 1.		"Al ser un artista nacional, se subsidia su tarifa de artista"	costoEsperado := 50000 log.		"Al ser Hospitality, la tarifa se va encareciendo a medida que se van ocupando los lugares"	costoEsperado := costoEsperado + (40000 / 1).	"Act"		costoAPagar := algoTek costoEntradaPara: evento enUbicacion: ubicacionElegida pagandoCon: efectivo.		"Assert"	self assert: costoAPagar closeTo: costoEsperado precision: 0.0001.! !!AlgoTekTestPropios methodsFor: 'tests' stamp: 'FranciscoLopez 9/28/2023 17:21'!test01LaEntradaMasBarataParaUnArtistaInternacionalPagandoConTarjetaTieneElSiguienteCosto		| costoAPagar costoEsperado algoTek evento  tarjeta|		"Caso donde se busca la entrada mas barata y hay un descuento por pagar con tarjeta"	evento := 'The Eras Tour, en River'.	tarjeta := Tarjeta conNombre: 'Patagonia'.	algoTek := AlgoTek registrarEvento: evento deArtistaInternacional: 'Taylor Swift' conTarifaArtista: 100000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'M912' tarifa: 25000.	algoTek paraEvento: evento registrarUbicacionPlateaPreferencial: 'D018' tarifa: 20000.	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Delantero' tarifa: 75000. 	algoTek paraEvento: evento registrarUbicacionCampo: 'Campo Trasero' tarifa: 40000.	algoTek paraEvento: evento registrarUbicacionViP: 'Karma is my Boyfriend' tarifa: 155000 lugaresDisponibles: 2.	algoTek paraEvento: evento registrarUbicacionViP: 'Its a Love Story' tarifa: 85000 lugaresDisponibles: 2.	costoEsperado := (100000 * 2) / 5 + 1000.		costoEsperado := (costoEsperado + 40000)*0.8.	costoAPagar := algoTek entradaMasBarataPara: evento pagandoCon: tarjeta .		self assert: costoAPagar closeTo: costoEsperado precision: 0.0001 .! !TestCase subclass: #ArtistaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!ArtistaTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 21:16'!test03CreoUnArtistaNacionalYCalculoSuTarifaArtisticaParaUnaEntrada	|artista tarifaArtistica|.	"Arrange"	artista := ArtistaInternacional nombre:'Taylor Swift'  conTarifa: 100000.		"Act"	tarifaArtistica := (100000 * 2) / 5 + 1000.		"Assert"	self assert: artista calcularTarifaArtistica equals:tarifaArtistica .! !!ArtistaTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 21:04'!test01SeCreaUnArtistaNacionalConUnaTarifa	|artista nombreDelArtista tarifaDelArtista|.		"Arrange"	artista := ArtistaNacional nombre:'Tan Bionica'  conTarifa: 50000.		"Act"	nombreDelArtista := 'Tan Bionica'.	tarifaDelArtista := 50000.		"Assert"	self assert: artista nombre equals:nombreDelArtista.	self assert: artista tarifa equals:tarifaDelArtista.! !!ArtistaTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 21:09'!test02SeCreaUnArtistaInternacionalConUnNombreYUnaTarifa	|artista nombreDelArtista tarifaDelArtista|.	"Arrange"	artista := ArtistaInternacional nombre:'Taylor Swift'  conTarifa: 100000.		"Act"	nombreDelArtista := 'Taylor Swift'.	tarifaDelArtista := 100000.		"Assert"	self assert: artista nombre equals:nombreDelArtista.	self assert: artista tarifa equals:tarifaDelArtista.	! !!ArtistaTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 21:17'!test04CreoUnArtistaInterNacionalYCalculoSuTarifaArtisticaParaUnaEntrada	|artista tarifaArtistica|.	"Arrange"	artista := ArtistaNacional  nombre:'Tan Bionica'  conTarifa: 50000.		"Act"	tarifaArtistica := 50000 log.		"Assert"	self assert: artista calcularTarifaArtistica equals:tarifaArtistica .! !!ArtistaTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/25/2023 22:09'!test05SeIngresaUnaTarifaInvalida	|tarifa|.	"Arrange"	tarifa := -100.		"Act and Assert"	self should: [ArtistaNacional  nombre:'Tan Bionica'  conTarifa: tarifa] raise:  TarifaInvalidaError  .	! !TestCase subclass: #EfectivoTeest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!EfectivoTeest methodsFor: 'tests' stamp: 'franciscoLopez 1/5/2024 16:21'!test01RealizoUnPagoConEfectivoYNoTieneDescuento	|efectivo costoesperado|		"Arrange"	efectivo := Efectivo new .		"Act"	costoesperado := 1000.	"Assert"	self assert: (efectivo costoDeEntrada:1000) equals:costoesperado.! !TestCase subclass: #EventosTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!EventosTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:31'!test04SeCalculaElCostoDeUnaEntradaParaUnaUbicacionVip		|evento artista ubicacion costoEsperado|.				artista := ArtistaNacional nombre:'Tan bionica'  conTarifa: 40000 .		ubicacion := Vip nombre:'Hospitality' conUnaTarifa:10000 conUnosLugares:1 .				evento := Evento registarUnEvento:'La Ultima Noche Magica'  conArtista:artista  enUnaUbicacion:ubicacion .				"Act"		costoEsperado  := 40000 log + (10000/1).				"Assert"		self assert:( evento costoDeEntrada ) equals: costoEsperado  .! !!EventosTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:38'!test05SiLaEntradaSePagaConTarjetaHayDescuento		|evento artista ubicacion costoEsperado tarjeta|.				tarjeta := Tarjeta conNombre:'Visa'.		artista := ArtistaNacional nombre:'Tan bionica'  conTarifa: 40000 .		ubicacion := Vip nombre:'Hospitality' conUnaTarifa:10000 conUnosLugares:1 .				evento := Evento registarUnEvento:'La Ultima Noche Magica'  conArtista:artista  enUnaUbicacion:ubicacion .				"Act"		costoEsperado  := (40000 log + (10000/1)) *0.8.				"Assert"		self assert:( evento pagarCon:tarjeta ) equals: costoEsperado  .! !!EventosTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:10'!test03SeRegistraUnEventoConUnaUbicacionYLaUbicacionElegida	|evento artista ubicacion ubicacionElegida|.				"Arrange"		artista := ArtistaNacional.		ubicacion := Platea nombre:'MA11' conUnaTarifa:15000 .				evento := Evento registarUnEvento:'La Ultima Noche Magica'  conArtista:artista  		enUnaUbicacion:ubicacion .				"Act"		 ubicacionElegida := 'MA11'.				"Assert"		self assert:( evento ubicacion nombre) equals:  ubicacionElegida .! !!EventosTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:03'!test01SeRegistraUnEventoConUnArtistaYUnaUbicacion		|evento artista ubicacion nombreDelEvento|.				"Arrange"		artista := ArtistaNacional new.		ubicacion := Platea new.		evento := Evento registarUnEvento:'La Ultima Noche Magica'  conArtista:artista  enUnaUbicacion:ubicacion .				"Act"		nombreDelEvento := 'La Ultima Noche Magica'.				"Assert"		self assert:( evento nombreEvento ) equals: nombreDelEvento .! !!EventosTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/28/2023 14:06'!test02SeRegistraUnEventoConUnArtistaYSuNombreYTarifa	|evento artista ubicacion nombreDelArtista|.				"Arrange"		artista := ArtistaNacional nombre:'Tan Bionica'  conTarifa:10000. 		ubicacion := Platea new.		evento := Evento registarUnEvento:'La Ultima Noche Magica'  conArtista:artista  enUnaUbicacion:ubicacion .				"Act"		nombreDelArtista := 'Tan Bionica'.				"Assert"		self assert:( evento artista nombre) equals:  nombreDelArtista.! !TestCase subclass: #TarjetaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!TarjetaTest methodsFor: 'tests' stamp: 'franciscoLopez 1/5/2024 16:20'!test01SeRealizaUnPagoConUnaTarjetaYSeAplicaUnDescuento	|tarjeta costoEsperado costoDeEntrada|	"Arrange"	tarjeta  := Tarjeta conNombre:'Visa'. 	costoDeEntrada := 1000.		"Act"	costoEsperado := (1000*0.8).		"Assert "	self assert: (tarjeta costoDeEntrada:costoDeEntrada) equals:costoEsperado.! !!TarjetaTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/25/2023 22:41'!test02NoSeIngresaUnNombreDeLaTarjetaEntoncesSeLanzaUnaExcepcion	|nombre|.	"Arrange"	nombre := ''.	"Act and Assert "	self should: [ (Tarjeta conNombre:nombre)  ] raise:NombreDeTarjetaInvalidoError.! !TestCase subclass: #UbicacionTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Casos-De-Uso'!!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 21:37'!test01CreoUnaUbicacionVipConUnNombreUnaTarfiaYUnosLugares	|ubicacion nombreDeLaUbicacion tarifa lugaresDisponibles|.		"Arrange"	ubicacion := Vip nombre:'Karma is my Boyfriend' conUnaTarifa:155000  conUnosLugares:2 .			"Act"	nombreDeLaUbicacion := 'Karma is my Boyfriend'.	tarifa := 155000.	lugaresDisponibles:= 2.		"Assert"	self assert: ubicacion nombre equals: nombreDeLaUbicacion.	self assert: ubicacion tarifa equals: tarifa.	self assert: ubicacion lugaresDisponibles equals: lugaresDisponibles .	! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 22:15'!test05CalculoLaTarifaDeUnaUbicaCionCampo	|ubicacion costoDeLaUbicacion |.		"Arrange"	ubicacion := Campo nombre:'Campo General' conUnaTarifa:16000 . 		"Act" 	costoDeLaUbicacion := 16000.	"Assert"	self assert: ubicacion calcularTarifa equals:costoDeLaUbicacion .! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 22:14'!test06CalculoLaTarifaDeUnaUbicaCionVip	|ubicacion costoDeLaUbicacion |.		"Arrange"	ubicacion := Vip nombre:'Hospitality'  conUnaTarifa:40000  conUnosLugares:2.  		"Act" 	costoDeLaUbicacion := (40000/2).	"Assert"	self assert: ubicacion calcularTarifa equals:costoDeLaUbicacion .! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/27/2023 22:17'!test08SeIngresaUnaTarifaInvalidaEnLaUbicacionPlatea	|tarifa|.		"Arrange"	tarifa := -1000  .		"Act and Assert "	self should: [Platea  nombre:'Tan bionica'  conUnaTarifa:tarifa ] raise: 	TarifaInvalidaError  .	! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 21:42'!test03CreoUnaUbicacionCampoConUnNombreUnaYUnaTarfia	|ubicacion nombreDeLaUbicacion tarifa|.		"Arrange"	ubicacion := Campo nombre:'Campo General' conUnaTarifa:16000 .			"Act" 	nombreDeLaUbicacion := 'Campo General'.	tarifa := 16000.	"Assert"	self assert: ubicacion nombre equals: nombreDeLaUbicacion.	self assert: ubicacion tarifa equals: tarifa.! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/27/2023 22:18'!test10SeIngresaUnaTarifaInvalidaEnLaUbicacionCampo	|tarifa|.		"Arrange"	tarifa := -500  .		"Act and Assert "	self should: [Campo nombre:'Tan bionica'  conUnaTarifa:tarifa  ] raise: 	TarifaInvalidaError  .	! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/27/2023 21:56'!test07CalculoLaTarifaDeUbicacionVipCuandoNoHayLugaresDisponibles		|ubicacion |.		"Arrange"	ubicacion := Vip nombre:'Hospitality'  conUnaTarifa:40000  conUnosLugares:0.  		"Act and Assert "	self should: [ (ubicacion calcularTarifa)  ] raise: NohayLugaresDisponiblesError.! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 21:49'!test04CalculoLaTarifaDeUnaUbicaCionPlatea	|ubicacion costoDeLaUbicacion |.		"Arrange"	ubicacion := Platea nombre:'M912' conUnaTarifa:25000 . 		"Act" 	costoDeLaUbicacion := (12 * 25000).	"Assert"	self assert: ubicacion calcularTarifa equals:costoDeLaUbicacion .! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/27/2023 22:17'!test09SeIngresaUnaTarifaInvalidaEnLaUbicacionVip	|tarifa|.		"Arrange"	tarifa := -500  .		"Act and Assert "	self should: [Vip nombre:'Tan bionica'  conUnaTarifa:tarifa   conUnosLugares:2 ] raise: 	TarifaInvalidaError  .	! !!UbicacionTest methodsFor: 'tests' stamp: 'FRANCISCOLOPEZ 9/23/2023 21:40'!test02CreoUnaUbicacionPlateaConUnNombreUnaYUnaTarfia	|ubicacion nombreDeLaUbicacion tarifa|.		"Arrange"	ubicacion := Platea nombre:'M912' conUnaTarifa:25000 .			"Act"	nombreDeLaUbicacion := 'M912'.	tarifa := 25000.	"Assert"	self assert: ubicacion nombre equals: nombreDeLaUbicacion.	self assert: ubicacion tarifa equals: tarifa.! !